{"ast":null,"code":"var _jsxFileName = \"/Users/kylehton/repos/resume-builder-app/frontend/src/Components/ResumeBox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist/build/pdf';\nimport './ResumeBox.css';\n\n// Set the worker path for PDF.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = '/pdfjs/pdf.worker.min.mjs';\nconst ResumeBox = ({\n  resumeUrl\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const renderTaskRef = useRef(null); // Track the current render task\n\n  useEffect(() => {\n    const renderPDF = url => {\n      const loadingTask = pdfjsLib.getDocument(url);\n      loadingTask.promise.then(pdf => {\n        pdf.getPage(1).then(page => {\n          const canvas = canvasRef.current;\n          const context = canvas.getContext('2d');\n\n          // Calculate the scale based on the container width\n          const containerWidth = canvas.parentElement.offsetWidth;\n          const viewport = page.getViewport({\n            scale: 1.22\n          }); // Start with a base scale\n\n          // Adjust the scale to fit within the container\n          const scale = containerWidth / viewport.width;\n          const scaledViewport = page.getViewport({\n            scale\n          });\n\n          // Set canvas size\n          canvas.height = scaledViewport.height;\n          canvas.width = scaledViewport.width;\n\n          // Cancel any previous rendering task\n          if (renderTaskRef.current) {\n            renderTaskRef.current.cancel();\n          }\n\n          // Render the page, wrapping in try-catch to handle cancellation\n          try {\n            const renderContext = {\n              canvasContext: context,\n              viewport: scaledViewport\n            };\n            const renderTask = page.render(renderContext);\n\n            // Save the renderTask reference so we can cancel it later if needed\n            renderTaskRef.current = renderTask;\n\n            // Catch any cancellation error and suppress it\n            renderTask.promise.catch(error => {\n              if (error.name !== 'RenderingCancelledException') {\n                console.error('Render task failed: ', error);\n              }\n            });\n          } catch (error) {\n            console.error('Render task error:', error);\n          }\n        });\n      });\n    };\n    if (resumeUrl) {\n      renderPDF(resumeUrl);\n\n      // Add a listener to adjust the canvas on window resize\n      const handleResize = () => renderPDF(resumeUrl);\n      window.addEventListener('resize', handleResize);\n\n      // Clean up the event listener and cancel any ongoing rendering tasks\n      return () => {\n        window.removeEventListener('resize', handleResize);\n        if (renderTaskRef.current) {\n          renderTaskRef.current.cancel();\n        }\n      };\n    }\n  }, [resumeUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resumebox-container\",\n    children: resumeUrl ? /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"pdf-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resume-placeholder\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your resume will be displayed here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(ResumeBox, \"jqa9j7J8Ww3vd8rHYPtA54p8Zu8=\");\n_c = ResumeBox;\nexport default ResumeBox;\nvar _c;\n$RefreshReg$(_c, \"ResumeBox\");","map":{"version":3,"names":["React","useEffect","useRef","pdfjsLib","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","ResumeBox","resumeUrl","_s","canvasRef","renderTaskRef","renderPDF","url","loadingTask","getDocument","promise","then","pdf","getPage","page","canvas","current","context","getContext","containerWidth","parentElement","offsetWidth","viewport","getViewport","scale","width","scaledViewport","height","cancel","renderContext","canvasContext","renderTask","render","catch","error","name","console","handleResize","window","addEventListener","removeEventListener","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kylehton/repos/resume-builder-app/frontend/src/Components/ResumeBox.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist/build/pdf';\nimport './ResumeBox.css';\n\n// Set the worker path for PDF.js\npdfjsLib.GlobalWorkerOptions.workerSrc = '/pdfjs/pdf.worker.min.mjs'; \n\nconst ResumeBox = ({ resumeUrl }) => {\n  const canvasRef = useRef(null);\n  const renderTaskRef = useRef(null); // Track the current render task\n\n  useEffect(() => {\n    const renderPDF = (url) => {\n      const loadingTask = pdfjsLib.getDocument(url);\n      loadingTask.promise.then(pdf => {\n        pdf.getPage(1).then(page => {\n          const canvas = canvasRef.current;\n          const context = canvas.getContext('2d');\n\n          // Calculate the scale based on the container width\n          const containerWidth = canvas.parentElement.offsetWidth;\n          const viewport = page.getViewport({ scale: 1.22 }); // Start with a base scale\n\n          // Adjust the scale to fit within the container\n          const scale = containerWidth / viewport.width;\n          const scaledViewport = page.getViewport({ scale });\n\n          // Set canvas size\n          canvas.height = scaledViewport.height;\n          canvas.width = scaledViewport.width;\n\n          // Cancel any previous rendering task\n          if (renderTaskRef.current) {\n            renderTaskRef.current.cancel();\n          }\n\n          // Render the page, wrapping in try-catch to handle cancellation\n          try {\n            const renderContext = {\n              canvasContext: context,\n              viewport: scaledViewport,\n            };\n            const renderTask = page.render(renderContext);\n\n            // Save the renderTask reference so we can cancel it later if needed\n            renderTaskRef.current = renderTask;\n\n            // Catch any cancellation error and suppress it\n            renderTask.promise.catch((error) => {\n              if (error.name !== 'RenderingCancelledException') {\n                console.error('Render task failed: ', error);\n              }\n            });\n          } catch (error) {\n            console.error('Render task error:', error);\n          }\n        });\n      });\n    };\n\n    if (resumeUrl) {\n      renderPDF(resumeUrl);\n\n      // Add a listener to adjust the canvas on window resize\n      const handleResize = () => renderPDF(resumeUrl);\n      window.addEventListener('resize', handleResize);\n\n      // Clean up the event listener and cancel any ongoing rendering tasks\n      return () => {\n        window.removeEventListener('resize', handleResize);\n        if (renderTaskRef.current) {\n          renderTaskRef.current.cancel();\n        }\n      };\n    }\n  }, [resumeUrl]);\n\n  return (\n    <div className=\"resumebox-container\">\n      {resumeUrl ? (\n        <canvas ref={canvasRef} className=\"pdf-canvas\"></canvas>\n      ) : (\n        <div className=\"resume-placeholder\">\n          <p>Your resume will be displayed here.</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ResumeBox;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}